for (var ls =-1; ls <2; ls++)
	{
	if(ls!=1)
	{var ctop = new Cube(shaders, [black, black, white, yellow, red,green]  );
    ctop.move(1.0, Y_AXIS);
	ctop.move(ls, Z_AXIS);
	ctop.move(space, Y_AXIS);
	ctop.move(space*ls, Z_AXIS);
	drawables.push(ctop);
    toprow.push(ctop);
	
	var cmid = new Cube(shaders, [black, black, white, black, red, black]  );
	cmid.move(ls, Z_AXIS);
	cmid.move(space*ls, Z_AXIS);
	drawables.push(cmid);
	
	var cbot = new Cube(shaders, [black, black, white, black, red,black]  ); //center bottom
	cbot.move(-1.0,Y_AXIS);
	cbot.move(ls, Z_AXIS);
	cbot.move(-space, Y_AXIS);
	cbot.move(space*ls, Z_AXIS);
	drawables.push(cbot)
	}//right
	else
	{var ctop = new Cube(shaders, [orange, black, white, yellow, red,green]  );
    ctop.move(1.0, Y_AXIS);
	ctop.move(ls, Z_AXIS);
	ctop.move(space, Y_AXIS);
	ctop.move(space*ls, Z_AXIS);
	drawables.push(ctop);
    toprow.push(ctop);
	
	var cmid = new Cube(shaders, [orange, black, white, black, red, black]  );
	cmid.move(ls, Z_AXIS);
	cmid.move(space*ls, Z_AXIS);
	drawables.push(cmid);
	
	var cbot = new Cube(shaders, [orange, black, white, black, red,black]  ); //center bottom
	cbot.move(-1.0,Y_AXIS);
	cbot.move(ls, Z_AXIS);
	cbot.move(-space, Y_AXIS);
	cbot.move(space*ls, Z_AXIS);
	drawables.push(cbot)
	}
	var crsidetop = new Cube(shaders, [orange, blue, white, yellow, red,black]  );
	crsidetop.move(1.0, X_AXIS);
  	crsidetop.move(1.0,Y_AXIS);
	crsidetop.move(ls, Z_AXIS);
	crsidetop.move(space, Y_AXIS);
	crsidetop.move(space, X_AXIS);
	crsidetop.move(space*ls, Z_AXIS);
	drawables.push(crsidetop);
	toprow.push(crsidetop);
	
	var crsidemid = new Cube(shaders, [orange, blue, white, black, red,black]  );
	crsidemid.move(1.0, X_AXIS);
	crsidemid.move(ls, Z_AXIS);
	crsidemid.move(space, X_AXIS);
	crsidemid.move(space*ls, Z_AXIS);
	drawables.push(crsidemid);
	if (ls==1)
		var crsidebot = new Cube(shaders, [orange, blue, white, black, red,black]  );
	else
		var crsidebot = new Cube(shaders, [black, blue, white, black, red,black]  );
	crsidebot.move(1.0, X_AXIS);
  	crsidebot.move(-1.0,Y_AXIS);
	crsidebot.move(ls, Z_AXIS);
	crsidebot.move(-space, Y_AXIS);
	crsidebot.move(space, X_AXIS);
	crsidebot.move(space*ls, Z_AXIS);
	
	drawables.push(crsidebot);
	
	//left
	var clsidetop = new Cube(shaders, [orange, black, white, yellow, red,green]  );
	clsidetop.move(-1.0, X_AXIS);
  	clsidetop.move(1.0,Y_AXIS);
	clsidetop.move(ls,Z_AXIS);
	clsidetop.move(space, Y_AXIS);
	clsidetop.move(-space, X_AXIS);
	clsidetop.move(space*ls, Z_AXIS);
	drawables.push(clsidetop);
	toprow.push(clsidetop);
	
	var clsidemid = new Cube(shaders, [orange, black, white, black, red,green]  );
	clsidemid.move(-1.0, X_AXIS);
	clsidemid.move(ls, Z_AXIS);
	clsidemid.move(-space, X_AXIS);
	clsidemid.move(space*ls, Z_AXIS);
	drawables.push(clsidemid);
	
	var clsidebot = new Cube(shaders,  [orange, black, white, black, red,green] );
	clsidebot.move(-1.0, X_AXIS);
  	clsidebot.move(-1.0,Y_AXIS);
	clsidebot.move(ls, Z_AXIS);
	clsidebot.move(-space, Y_AXIS);
	clsidebot.move(-space, X_AXIS);
	clsidebot.move(space*ls, Z_AXIS);
	
	drawables.push(clsidebot);
	
	}

CASESHORTCUT

switch(cube.pos.coord[1]) // what cube
			{
			case 0:
				cube.pos = getposition([-1,2], posindex);
			break;

			case 1:
				cube.pos = getposition([0,2], posindex);
			break;

			case 2:
				cube.pos = getposition([1,2], posindex);
			break;

			case 3:
			break;

			case 4:
			break;

			case 5:
			break;

			case 6:
			break;

			case 8:
			break;